name: CI

on: ["push", "pull_request"]

jobs:
  ci:

    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [24.1]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore dependencies cache
      uses: actions/cache@v2
      id: mix-cache 
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Lint format
      run: mix format --check-formatted

    - name: Retrieve PLT cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Lint dialyzer
      run: mix dialyzer --no-check

    - name: Run tests
      run: mix coveralls.github
      env:
        MIX_ENV: test
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
